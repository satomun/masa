# -*- coding: utf-8 -*-
%matplotlib inline
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

ACC  = pd.read_excel("勘定科目.xlsx").dropna(subset=["勘定科目"]).query('勘定科目.str.match("[0-9]{3}")', engine='python')
ACC  = ACC.drop("Unnamed: 1", axis=1).drop("Unnamed: 2", axis=1).drop("Unnamed: 3", axis=1).drop("Unnamed: 4", axis=1)

#最新データ追加位置
TB35 = pd.read_csv("35.txt",encoding="SHIFT-JIS").dropna(subset=["勘定科目コード"]).drop("合計 (金額)", axis=1).drop("部門コード", axis=1).drop("部門名", axis=1)
TB35["勘定科目"] = TB35["勘定科目コード"].apply(round).apply(str)
TB34 = pd.read_csv("34.txt",encoding="SHIFT-JIS").dropna(subset=["勘定科目コード"]).drop("合計 (金額)", axis=1).drop("部門コード", axis=1).drop("部門名", axis=1)
TB34["勘定科目"] = TB34["勘定科目コード"].apply(round).apply(str)
TB33 = pd.read_csv("33.txt",encoding="SHIFT-JIS").dropna(subset=["勘定科目コード"]).drop("合計 (金額)", axis=1).drop("部門コード", axis=1).drop("部門名", axis=1)
TB33["勘定科目"] = TB33["勘定科目コード"].apply(round).apply(str)
TB32 = pd.read_csv("32.txt",encoding="SHIFT-JIS").dropna(subset=["勘定科目コード"]).drop("合計 (金額)", axis=1).drop("部門コード", axis=1).drop("部門名", axis=1)
TB32["勘定科目"] = TB32["勘定科目コード"].apply(round).apply(str)
TB31 = pd.read_csv("31.txt",encoding="SHIFT-JIS").dropna(subset=["勘定科目コード"]).drop("合計 (金額)", axis=1).drop("部門コード", axis=1).drop("部門名", axis=1)
TB31["勘定科目"] = TB31["勘定科目コード"].apply(round).apply(str)
TB30 = pd.read_csv("30.txt",encoding="SHIFT-JIS").dropna(subset=["勘定科目コード"]).drop("合計 (金額)", axis=1).drop("部門コード", axis=1).drop("部門名", axis=1)
TB30["勘定科目"] = TB30["勘定科目コード"].apply(round).apply(str)
TB29 = pd.read_csv("29.txt",encoding="SHIFT-JIS").dropna(subset=["勘定科目コード"]).drop("合計 (金額)", axis=1).drop("部門コード", axis=1).drop("部門名", axis=1)
TB29["勘定科目"] = TB29["勘定科目コード"].apply(round).apply(str)
TB28 = pd.read_csv("28.txt",encoding="SHIFT-JIS").dropna(subset=["勘定科目コード"]).drop("合計 (金額)", axis=1).drop("部門コード", axis=1).drop("部門名", axis=1)
TB28["勘定科目"] = TB28["勘定科目コード"].apply(round).apply(str)
TB27 = pd.read_csv("27.txt",encoding="SHIFT-JIS").dropna(subset=["勘定科目コード"]).drop("合計 (金額)", axis=1).drop("部門コード", axis=1).drop("部門名", axis=1)
TB27["勘定科目"] = TB27["勘定科目コード"].apply(round).apply(str)
TB26 = pd.read_csv("26.txt",encoding="SHIFT-JIS").dropna(subset=["勘定科目コード"]).drop("合計 (金額)", axis=1).drop("部門コード", axis=1).drop("部門名", axis=1)
TB26["勘定科目"] = TB26["勘定科目コード"].apply(round).apply(str)
TB25 = pd.read_csv("25.txt",encoding="SHIFT-JIS").dropna(subset=["勘定科目コード"]).drop("合計 (金額)", axis=1).drop("部門コード", axis=1).drop("部門名", axis=1)
TB25["勘定科目"] = TB25["勘定科目コード"].apply(round).apply(str)

#データ結合と不要項目削除
ZAIMU = pd.merge(ACC,TB25,  on='勘定科目',how="left").drop("勘定科目コード", axis=1).drop("勘定科目名", axis=1)
ZAIMU = pd.merge(ZAIMU,TB26,on='勘定科目',how="left").drop("勘定科目コード", axis=1).drop("勘定科目名", axis=1)
ZAIMU = pd.merge(ZAIMU,TB27,on='勘定科目',how="left").drop("勘定科目コード", axis=1).drop("勘定科目名", axis=1)
ZAIMU = pd.merge(ZAIMU,TB28,on='勘定科目',how="left").drop("勘定科目コード", axis=1).drop("勘定科目名", axis=1)
ZAIMU = pd.merge(ZAIMU,TB29,on='勘定科目',how="left").drop("勘定科目コード", axis=1).drop("勘定科目名", axis=1)
ZAIMU = pd.merge(ZAIMU,TB30,on='勘定科目',how="left").drop("勘定科目コード", axis=1).drop("勘定科目名", axis=1)
ZAIMU = pd.merge(ZAIMU,TB31,on='勘定科目',how="left").drop("勘定科目コード", axis=1).drop("勘定科目名", axis=1)
ZAIMU = pd.merge(ZAIMU,TB32,on='勘定科目',how="left").drop("勘定科目コード", axis=1).drop("勘定科目名", axis=1)
ZAIMU = pd.merge(ZAIMU,TB33,on='勘定科目',how="left").drop("勘定科目コード", axis=1).drop("勘定科目名", axis=1)
ZAIMU = pd.merge(ZAIMU,TB34,on='勘定科目',how="left").drop("勘定科目コード", axis=1).drop("勘定科目名", axis=1)
ZAIMU = pd.merge(ZAIMU,TB35,on='勘定科目',how="left").drop("勘定科目コード", axis=1).drop("勘定科目名", axis=1)
#最新データ追加位置

ZAIMU = ZAIMU.T.fillna(0)
ZAIMU.columns = ZAIMU.loc["勘定科目"]
ZAIMU = ZAIMU.drop('勘定科目', axis=0)

# データ生成
x = ZAIMU.index
売掛金 = ZAIMU["152"].values
棚卸資産 = ZAIMU["176"].values + ZAIMU["177"].values + ZAIMU["178"].values
未払金 = ZAIMU["322"].values
正味運転資金 = 売掛金 + 棚卸資産 - 未払金
メンテ売上 = ZAIMU["511"].values 
他社メンテ売上 = ZAIMU["512"].values
工事売上 = ZAIMU["513"].values + ZAIMU["514"].values
現預金 = ZAIMU["131"].values + ZAIMU["111"].values + ZAIMU["112"].values
短期借入金 = ZAIMU["321"].values
長期借入金 = ZAIMU["341"].values
余裕現預金 = 現預金 - 短期借入金 - 長期借入金


# #------------------------------------------------
# plt.figure(figsize=(12,5))
# # plt.plot(x, mente, label="mente")
# # plt.plot(x, tasha, label="tasha")
# # plt.plot(x, kouji, label="kouji")
# plt.plot(x, 正味運転資金, color="r",label="cs",marker="x")
# plt.plot(x, 現預金, color="b",label="cs2",marker="x")
# plt.title('seibu',fontsize=20)
# plt.xlabel('month')
# plt.ylabel('Account of Money')
# # プロット表示(設定の反映)
# plt.show()
# #------------------------------------------------

# fig = plt.figure()
# # 1行2列の左

# x = ZAIMU.index
# y = ZAIMU["511"].values/(ZAIMU["511"].values+ZAIMU["512"].values+ZAIMU["513"].values+ZAIMU["514"].values)

# ax1 = fig.add_subplot(1, 2, 1)
# ax1.plot(x, y) 
# ax1.set_title("uriage")

# # 1行2列の右
# labels = ["E", "D", "C", "B", "A"] 
# y = [10, 20, 30, 40, 50] 
# ex = [0, 0, 0, 0, 0.1] 
# ax2 = fig.add_subplot(1, 2, 2)
# ax2.pie(y, explode = ex, labels = labels, autopct = '%1.1f%%', startangle = 90) 
# ax2.set_title("uriage")
#------------------------------------------------
PL = ZAIMU.T.loc["500":"999",].T
BS = ZAIMU.T.loc["000":"499",].T
# print(round(ZAIMU.shape[0]/12))#11
# print(PL[108:120].sum())
for i in list(range(1,round(ZAIMU.shape[0]/12))):#1～10でルール
    PL_sum["i"].append(pd.DataFrame(PL[12*(i-1):12*i].sum()))
print(PL_sum)
BS_sum = BS[11:12]
